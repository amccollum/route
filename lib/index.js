// Generated by CoffeeScript 1.3.1
var route;

route = typeof exports !== "undefined" && exports !== null ? exports : (this['route'] = {});

route.Router = (function() {

  Router.name = 'Router';

  Router.prototype._transformations = [[/([?=,\/])/g, '\\$1'], [/:([\w\d]+)/g, '([^/]*)'], [/\*([\w\d]+)/g, '(.*?)']];

  function Router() {
    this.routes = [];
  }

  Router.prototype.add = function(routes) {
    var expr, fn, pattern, replacement, transformer, _i, _len, _ref, _ref1;
    for (expr in routes) {
      fn = routes[expr];
      pattern = "^" + expr + "$";
      _ref = this._transformations;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        _ref1 = _ref[_i], transformer = _ref1[0], replacement = _ref1[1];
        pattern = pattern.replace(transformer, replacement);
      }
      this.routes.push({
        expr: expr,
        pattern: new RegExp(pattern),
        fn: fn
      });
    }
  };

  Router.prototype.run = function(path, context) {
    var m, results, route, _i, _len, _ref;
    results = [];
    _ref = this.routes;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      route = _ref[_i];
      if ((m = route.pattern.exec(path))) {
        results.push(route.fn.apply(context, m.slice(1)));
      }
    }
    return results;
  };

  return Router;

})();
